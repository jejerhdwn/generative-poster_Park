# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VzQL2o49Vr0w8MRsgK-5Z6LFtSshZWOC
"""

# app.py
# Interactive Generative True Star Poster

import streamlit as st
import random
import math
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.colors import hsv_to_rgb

st.set_page_config(page_title="Interactive Star Poster", layout="centered")
st.title("Interactive Generative Star Poster")
st.write("Adjust parameters on the sidebar to customize your abstract star poster!")

# --- Sidebar controls ---
n_layers = st.sidebar.slider("Number of Star Layers", 1, 15, 8)
wobble = st.sidebar.slider("Wobble / Irregularity", 0.0, 0.2, 0.05)
star_size = st.sidebar.slider("Star Size (scale)", 0.1, 1.0, 0.5)
palette_mode = st.sidebar.selectbox("Palette Mode", ["pastel", "vivid", "random"])
seed = st.sidebar.number_input("Random Seed", min_value=0, max_value=9999, value=42)

# --- Palette ---
def make_palette(k=6, mode="vivid"):
    cols = []
    for _ in range(k):
        if mode=="pastel":
            cols.append((random.uniform(0.6,1.0), random.uniform(0.6,1.0), random.uniform(0.6,1.0)))
        elif mode=="vivid":
            cols.append((random.random(), random.random(), random.random()))
        else:
            cols.append(tuple(np.clip(np.random.rand(3),0,1)))
    return cols

palette = make_palette(6, mode=palette_mode)

# Show palette
st.write("**Generated Palette Preview:**")
fig_palette, ax_palette = plt.subplots(figsize=(6,1))
ax_palette.axis("off")
for i, c in enumerate(palette):
    rect = plt.Rectangle((i,0), 1, 1, color=c)
    ax_palette.add_patch(rect)
ax_palette.set_xlim(0,len(palette))
ax_palette.set_ylim(0,1)
st.pyplot(fig_palette)

# --- Star shape ---
def true_star(center=(0.5,0.5), r_outer=0.3, r_inner=0.15, num_points=5, wobble=0.1):
    cx, cy = center
    angles_outer = np.linspace(0, 2*math.pi, num_points, endpoint=False)
    angles_inner = angles_outer + math.pi/num_points
    angles = np.empty(num_points*2)
    angles[0::2] = angles_outer
    angles[1::2] = angles_inner
    radii = np.empty_like(angles)
    for i in range(len(angles)):
        base_r = r_outer if i%2==0 else r_inner
        radii[i] = base_r*(1+wobble*(random.random()-0.5))
    x = cx + radii*np.cos(angles)
    y = cy + radii*np.sin(angles)
    x = np.append(x,x[0])
    y = np.append(y,y[0])
    return x, y

# --- Poster generation ---
random.seed(seed)
np.random.seed(seed)
fig, ax = plt.subplots(figsize=(7,10))
ax.axis("off")
ax.set_facecolor((0.98,0.98,0.97))

for _ in range(n_layers):
    cx, cy = random.random(), random.random()
    outer_r = star_size*random.uniform(0.3,0.8)
    inner_r = outer_r * random.uniform(0.35,0.55)
    x, y = true_star(center=(cx,cy), r_outer=outer_r, r_inner=inner_r, wobble=wobble)
    color = random.choice(palette)
    alpha = random.uniform(0.3,0.6)
    ax.fill(x, y, color=color, alpha=alpha, edgecolor=(0,0,0,0))

ax.text(0.05,0.95,"Generative Star Poster", fontsize=18, weight='bold', transform=ax.transAxes)
ax.text(0.05,0.91,"Week 2 â€¢ Arts & Advanced Big Data", fontsize=11, transform=ax.transAxes)

ax.set_xlim(0,1)
ax.set_ylim(0,1)
st.pyplot(fig)